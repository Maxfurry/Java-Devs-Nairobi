apply plugin: 'com.android.application'
apply plugin: 'jacoco'

apply from: "$project.rootDir/tools/findbugs.gradle"
apply from: "$project.rootDir/tools/checkstyle.gradle"
apply from: "$project.rootDir/tools/pmd.gradle"
apply from: "$project.rootDir/app/jacoco.gradle"
apply from: "$project.rootDir/tools/git-hooks.gradle"

check.dependsOn 'checkstyle', 'findbugs', 'pmd', 'lint'

jacoco {
    toolVersion =  "0.8.1"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.andela.javadevnai"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', "GITHUB_CLIENT_ID", "\"" + System.getenv("GITHUB_CLIENT_ID")+ "\""
            buildConfigField 'String', "GITHUB_CLIENT_SECRET", "\"" + System.getenv("GITHUB_CLIENT_SECRET")+ "\""
        }

        debug {
            buildConfigField 'String', "GITHUB_CLIENT_ID", "\"" + System.getenv("GITHUB_CLIENT_ID")+ "\""
            buildConfigField 'String', "GITHUB_CLIENT_SECRET", "\"" + System.getenv("GITHUB_CLIENT_SECRET")+ "\""
            testCoverageEnabled = true
        }
    }

    testOptions {
        animationsDisabled true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.appCompatVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.recyclerViewVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support:design:$rootProject.appCompatVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoCoreVersion"
    implementation "de.hdodenhof:circleimageview:$rootProject.hdodenhofVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.converterGsonVersion"
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"
    implementation "com.android.support:exifinterface:$rootProject.appCompatVersion"
    implementation "com.android.support:support-v4:$rootProject.appCompatVersion"

    androidTestImplementation "com.android.support.test:rules:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.appCompatVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoCoreVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoCoreVersion"

    testImplementation "org.mockito:mockito-all:$rootProject.mockitoVersion"
    testImplementation "org.powermock:powermock-module-junit4:$rootProject.powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito:$rootProject.powerMockVersion"
}
